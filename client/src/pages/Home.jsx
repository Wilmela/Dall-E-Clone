import { useState, useEffect } from "react";
import { Card, FormField, Loader } from "../components";

const RenderCard = ({ data, title, loading, setLoading }) => {
  if (data?.length > 0) {
    return data.map((post) => (
      <Card
        key={post._id}
        loading={loading}
        setLoading={setLoading}
        {...post}
      />
    ));
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchResults, setSearchResults] = useState(null);
  const [timeSearchOut, setSearchTimeOut] = useState(null);

  //
  useEffect(() => {
    (async () => {
      setLoading(true);
      try {
        const response = await fetch(
          "v1/posts/post",
          {
            method: "GET",
            headers: { "Content-Type": "application/json" },
          }
        );

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    })();
  }, []);

  const handleSearch = (e) => {
    clearTimeout(timeSearchOut);

    setSearchText(e.target.value);

    setSearchTimeOut(
      setTimeout(() => {
        const searchResults = allPosts.filter((post) => {
          post?.name.toLowerCase().includes(searchText.toLowerCase()) ||
            post?.prompt.toLowerCase().includes(searchText.toLowerCase());
        });

        setSearchResults(searchResults);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>

        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through the collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      {/* Search Input */}
      <div className="my-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearch}
        />
      </div>

      <div>
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75]">
                Showing result for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-2">
              {searchText ? (
                <RenderCard
                  data={searchResults}
                  title="No search results found"
                />
              ) : (
                <RenderCard
                  data={allPosts}
                  title="No posts found"
                  loading={loading}
                  setLoading={setLoading}
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};
export default Home;
